/// <reference types="node" />
/// <reference types="node" />
import type { IncomingMessage } from 'node:http';
declare const INTERNALS: unique symbol;
interface FromOptions {
    body?: Buffer;
}
/**
 * Extends the [Web Request API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.
 */
export declare class RoboRequest extends Request {
    [INTERNALS]: {
        params: Record<string, string>;
        raw: IncomingMessage;
    };
    private constructor();
    get params(): Record<string, string>;
    get query(): Record<string, string | string[]>;
    get raw(): IncomingMessage;
    static from(req: IncomingMessage, options?: FromOptions): Promise<RoboRequest>;
}
export declare function applyParams(request: RoboRequest, params: Record<string, string>): void;
export declare function validateURL(url: string | URL): string;
export {};
