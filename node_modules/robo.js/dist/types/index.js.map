{"version":3,"sources":["../../src/types/index.ts"],"names":[],"mappings":"AAAA,WAAc,WACd,WAAc,gBACd,WAAc,cACd,WAAc,cACd,WAAc","sourcesContent":["export * from './api.js'\nexport * from './commands.js'\nexport * from './config.js'\nexport * from './events.js'\nexport * from './manifest.js'\n\nexport interface ContextConfig extends BaseConfig {\n\tdefaultMemberPermissions?: string | number | bigint\n\tdmPermission?: boolean\n\tnameLocalizations?: Record<string, string>\n\tsage?: false | SageOptions\n\ttimeout?: number\n}\n\nexport type ContextEntry = ContextConfig\n\nexport interface Context {\n\tconfig?: ContextConfig\n\tdefault: (...data: unknown[]) => unknown | Promise<unknown>\n}\n\nexport interface FlashcoreAdapter<K = string, V = unknown> {\n\tclear(): Promise<boolean> | Promise<void> | boolean | void\n\tdelete(key: K): Promise<boolean> | boolean\n\tget(key: K): Promise<V | undefined> | V | undefined\n\tset(key: K, value: V): Promise<boolean> | boolean\n\thas(key: K): Promise<boolean> | boolean\n}\n\nexport interface HandlerRecord<T = unknown> {\n\tauto?: boolean\n\tdescription?: string\n\thandler: T\n\tkey: string\n\tmodule?: string\n\tpath: string\n\tplugin?: {\n\t\tname: string\n\t\tpath: string\n\t}\n\ttype: 'api' | 'command' | 'context' | 'event' | 'middleware'\n}\n\nexport interface MiddlewareData {\n\tpayload: unknown[]\n\trecord: HandlerRecord\n}\n\nexport interface MiddlewareResult {\n\tabort?: boolean\n}\n\nexport interface Middleware {\n\tdefault: (data: MiddlewareData) => void | MiddlewareResult | Promise<MiddlewareResult>\n}\n\nexport type MiddlewareEntry = BaseConfig\n\nexport interface RoboMessage {\n\ttype: 'ready' | 'restart' | 'state-load' | 'state-save'\n}\n\nexport interface RoboStateMessage extends RoboMessage {\n\tstate: Record<string, unknown>\n}\n\nexport interface SpiritMessage {\n\terror?: unknown\n\tevent?: 'build' | 'get-state' | 'command' | 'ready' | 'restart' | 'set-state' | 'start' | 'stop'\n\tpayload?: unknown\n\tstate?: Record<string, unknown>\n\tverbose?: boolean\n}\n\nexport type SageOptions = {\n\tdefer?: boolean\n\tdeferBuffer?: number\n\tephemeral?: boolean\n\terrorChannelId?: string\n\terrorMessage?: string\n\terrorReplies?: boolean\n}\n\nexport type Plugin = string | [string, unknown, PluginMetaOptions?]\n\nexport interface PluginData {\n\tname: string\n\toptions?: unknown\n\tmetaOptions?: PluginMetaOptions\n}\n\nexport interface PluginMetaOptions {\n\tfailSafe?: boolean\n}\n\nexport interface BaseConfig {\n\t__auto?: true\n\t__module?: string\n\t__path?: string\n\t__plugin?: {\n\t\tname: string\n\t\tpath: string\n\t}\n\tdescription?: string\n\ttimeout?: number\n}\n"]}