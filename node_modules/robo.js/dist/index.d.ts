export { color, composeColors } from './core/color.js';
export { getConfig } from './core/config.js';
import { Manifest } from './types/index.js';
export { Api, ApiEntry, BaseConfig, Command, CommandConfig, CommandEntry, CommandOption, CommandOptionTypes, CommandOptions, CommandResult, Config, Context, ContextConfig, ContextEntry, Event, EventConfig, FlashcoreAdapter, HandlerRecord, HttpMethod, Middleware, MiddlewareData, MiddlewareEntry, MiddlewareResult, Plugin, PluginData, PluginMetaOptions, RoboMessage, RoboReply, RoboRequest, RoboStateMessage, RouteHandler, SageOptions, Scope, SpiritMessage } from './types/index.js';
export { Flashcore } from './core/flashcore.js';
export { createCommandConfig } from './core/handlers.js';
export { LogDrain, Logger, logger } from './core/logger.js';
export { getPluginOptions } from './core/portal.js';
export { Robo, client, portal } from './core/robo.js';
export { State, getState, setState } from './core/state.js';
import 'node:http';
import 'discord.js';

/**
 * Returns the currently loaded manifest.
 * May return null if manifest has yet to load. Use `loadManifest` to load it first.
 */
declare function getManifest(): Manifest | null;

export { Manifest, getManifest };
