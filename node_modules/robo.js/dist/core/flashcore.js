import { getConfig } from './config.js';
import { FlashcoreFileAdapter } from './flashcore-fs.js';
import { logger } from './logger.js';

let t;const n=new Map,u={clear:()=>t.clear(),delete:(e,a)=>{if(a?.namespace&&(e=Array.isArray(a.namespace)?`${a.namespace.join("/")}__${e}`:`${a.namespace}__${e}`),n.has(e)){const r=t.get(e);if(r instanceof Promise)return r.then(s=>{n.get(e).forEach(c=>c(s,void 0));}).then(()=>t.delete(e)).catch(()=>t.delete(e));n.get(e).forEach(s=>s(r,void 0));}return t.delete(e)},get:(e,a)=>(a?.namespace&&(e=Array.isArray(a.namespace)?`${a.namespace.join("/")}__${e}`:`${a.namespace}__${e}`),t.get(e)??a?.default),has:(e,a)=>(a?.namespace&&(e=`${a.namespace}__${e}`),t.has(e)),off:(e,a,r)=>{r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),n.has(e)&&a?(n.get(e)?.delete(a),n.get(e)?.size===0&&n.delete(e)):n.has(e)&&n.delete(e);},on:(e,a,r)=>{r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),n.has(e)||n.set(e,new Set),n.get(e)?.add(a);},set:(e,a,r)=>{if(r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),n.has(e)||typeof a=="function"){const s=t.get(e),c=async o=>{let i=a;return typeof a=="function"&&(i=a(o)),n.has(e)&&n.get(e).forEach(f=>f(o,i)),t.set(e,i)};return s instanceof Promise?s.then(async o=>await c(o)).catch(()=>t.set(e,a)):c(s)}return t.set(e,a)}};async function _(){const e=getConfig();if(e.flashcore?.keyv)try{logger.debug("Using Keyv Flashcore adapter");const a=(await import('keyv')).default,r=new a(e.flashcore.keyv);r.on("error",s=>{logger.error("Keyv error:",s);}),t=r;}catch(a){throw logger.error(a),new Error("Failed to import or setup the adapter with keyv package.")}else t=new FlashcoreFileAdapter,await t.init();}

export { u as Flashcore, _ as prepareFlashcore };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=flashcore.js.map