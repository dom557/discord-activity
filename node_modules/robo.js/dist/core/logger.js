import { inspect } from 'node:util';
import { color } from './color.js';
import { env } from './env.js';

const L=process.env.NODE_ENV!=="production",b=/\x1b\[.*?m/g,g=new Set;function f(n,e,...r){switch(e){case"trace":case"debug":case"info":case"wait":case"event":return d(process.stdout,...r);case"warn":case"error":return d(process.stderr,...r);default:return d(process.stdout,...r)}}function d(n,...e){return new Promise((r,i)=>{const u=e?.map(s=>typeof s=="object"||s instanceof Error||Array.isArray(s)?inspect(s,{colors:!0,depth:null}):s);n.write(u?.join(" ")+`
`,"utf8",s=>{s?i(s):r();});})}const m=100;class y{level;timestamp;data;constructor(e,r){this.level=e,this.data=r,this.timestamp=new Date;}message(){return this.data.map(r=>{if(r instanceof Error)return r.message;if(typeof r=="object")try{return JSON.stringify(r)}catch{return "[unserializable object]"}return r}).join(" ").replace(b,"")}}class c{_customLevels;_enabled;_level;_levelValues;_parent;_prefix;_currentIndex;_drain;_logBuffer;constructor(e){this.setup(e);}setup(e){const{customLevels:r,drain:i=f,enabled:u=!0,level:s,parent:a,prefix:p}=e??{};this._customLevels=r,this._drain=i,this._enabled=u,this._parent=a,this._prefix=p,env.roboplay.env?this._level="trace":this._level=s??"info",this._levelValues={...k,...Object.fromEntries(Object.entries(this._customLevels??{}).map(([h,_])=>[h,_.priority]))},this._currentIndex=0,this._logBuffer=new Array(e?.maxEntries??m);}_log(e,r,...i){if(this._parent)return this._parent._log(this._prefix,r,...i);if(!this._enabled||this._drain===f&&this._levelValues[this._level]>this._levelValues[r])return;if(r!=="other"){let a=((this._customLevels?this._customLevels[r]?.label:x[r])??r.padEnd(5))+" -";e&&(a=color.bold(E[r](e+":"))+a),i.unshift(a);}L&&(this._logBuffer[this._currentIndex]=new y(r,i),this._currentIndex=(this._currentIndex+1)%this._logBuffer.length);const u=this._drain(this,r,...i);g.add(u),u.finally(()=>{g.delete(u);});}async flush(){if(this._parent)return this._parent.flush();await Promise.allSettled([...g]);}fork(e){return new c({customLevels:this._customLevels,enabled:this._enabled,level:this._level,parent:this,prefix:this._prefix?this._prefix+e:e})}getLevel(){return this._parent?this._parent.getLevel():this._level}getLevelValues(){return this._parent?this._parent.getLevelValues():this._levelValues}getRecentLogs(e=50){if(this._parent)return this._parent.getRecentLogs(e);if(e<=0)return [];e=Math.min(e,this._logBuffer.length);const r=(this._currentIndex-e+this._logBuffer.length)%this._logBuffer.length;let i;return r<this._currentIndex?i=this._logBuffer.slice(r,this._currentIndex):i=this._logBuffer.slice(r).concat(this._logBuffer.slice(0,this._currentIndex)),i.reverse()}setDrain(e){this._drain=e;}trace(...e){this._log(null,"trace",...e);}debug(...e){this._log(null,"debug",...e);}info(...e){this._log(null,"info",...e);}wait(...e){this._log(null,"wait",...e);}log(...e){this._log(null,"other",...e);}event(...e){this._log(null,"event",...e);}ready(...e){this._log(null,"ready",...e);}warn(...e){this._log(null,"warn",...e);}error(...e){this._log(null,"error",...e);}custom(e,...r){this._customLevels?.[e]&&this._log(null,e,...r);}}const k={trace:0,debug:1,info:2,wait:3,other:4,event:5,ready:6,warn:7,error:8},E={trace:color.gray,debug:color.cyan,info:color.blue,wait:color.cyan,event:color.magenta,ready:color.green,warn:color.yellow,error:color.red},x={trace:color.gray("trace".padEnd(5)),debug:color.cyan("debug".padEnd(5)),info:color.blue("info".padEnd(5)),wait:color.cyan("wait".padEnd(5)),event:color.magenta("event".padEnd(5)),ready:color.green("ready".padEnd(5)),warn:color.yellow("warn".padEnd(5)),error:color.red("error".padEnd(5))};let l=null;function t(n){return !l&&n?l=new c(n):l?n&&l.setup(n):l=new c,l}t.flush=async function(){await t().flush();},t.fork=function(n){return t().fork(n)},t.getRecentLogs=function(n=25){return t().getRecentLogs(n)},t.trace=function(...n){return t().trace(...n)},t.debug=function(...n){return t().debug(...n)},t.info=function(...n){return t().info(...n)},t.wait=function(...n){return t().wait(...n)},t.log=function(...n){return t().log(...n)},t.event=function(...n){return t().event(...n)},t.ready=function(...n){return t().ready(...n)},t.warn=function(...n){return t().warn(...n)},t.error=function(...n){return t().error(...n)},t.custom=function(n,...e){return t().custom(n,...e)};

export { b as ANSI_REGEX, L as DEBUG_MODE, c as Logger, t as logger };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=logger.js.map